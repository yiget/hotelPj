<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!--上面的xsd最好和当前使用的Spring版本号一致,如果换了Spring版本,这个最好也跟着改 -->


	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan
		base-package="org.itrip.controller" />

	<!-- 配置注解驱动 -->
	<mvc:annotation-driven />

	<!--静态资源映射 -->
	<!-- http://perfy315.iteye.com/blog/2008763 mapping="/js/**" 表示当浏览器有静态资源请求的时候，并且请求url路径中带有：/js/，则这个资源跑到webapp目录下的/WEB-INF/statics/js/去找 
		比如我们在 JSP 中引入一个 js 文件：src="${webRoot}/js/jQuery-core/jquery-1.6.1.min.js -->
	<mvc:resources mapping="/statics/**"
		location="/WEB-INF/statics/" />
	

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP -->
	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/" /><!--设置JSP文件的目录位置 -->
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- 文件上传 start 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 文件大小最大值 上传文件大小限制为10M，10*1024*1024 -->
		<property name="maxUploadSize" value="10485760" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="4096" />
	</bean>
	<!--文件上传 end -->

	<!-- fastJSON -->
	<bean id="fastJsonConfig"
		class="com.alibaba.fastjson.support.config.FastJsonConfig">
		<!--默认编码格式 -->
		<property name="charset" value="UTF-8" />

		<property name="serializerFeatures">
			<list>
				<value>WriteNullListAsEmpty</value>
				<value>WriteDateUseDateFormat</value>
				<value>PrettyFormat</value>
				<value>WriteMapNullValue</value>
				<value>WriteNullStringAsEmpty</value>
				<value>WriteNullListAsEmpty</value>
				<value>DisableCircularReferenceDetect</value>
			</list>
		</property>

	</bean>
	<!--fastjson支持配置结束 -->
 <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">  
      <property name="config">  
          <bean class="com.google.code.kaptcha.util.Config">  
              <constructor-arg>  
                  <props> 
                      <!-- 是否有边框 可选yes 或者 no --> 
                      <prop key="kaptcha.border">yes</prop>  
                      <!-- 边框颜色 -->
                      <prop key="kaptcha.border.color">105,179,90</prop>  
                      <!-- 验证码文本字符颜色 -->
                      <prop key="kaptcha.textproducer.font.color">blue</prop>  
                      <!-- 验证码文本字符大小 -->
                      <prop key="kaptcha.textproducer.font.size">45</prop>  
                      <!-- 验证码图片的宽度 默认200 -->
                      <prop key="kaptcha.image.width">125</prop>  
                      <!-- 验证码图片的高度 默认50 -->
                      <prop key="kaptcha.image.height">45</prop>  
                      <!-- 验证码文本字符长度  默认为5 -->
                      <prop key="kaptcha.textproducer.char.length">4</prop>  
                      <!-- 验证码文本字体样式  默认为new Font("Arial", 1, fontSize), new Font("Courier", 1, fontSize)  -->
                      <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>  
                  </props>  
              </constructor-arg>  
          </bean>  
      </property>  
  </bean>
	<!-- springmvc 消息转换器 -->
	<mvc:annotation-driven>
		<!--不使用默认消息转换器 -->
		<mvc:message-converters register-defaults="false">
			<!--spring消息转换器 -->
			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />

			<!--解决@Responcebody中文乱码问题 -->
			<bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!--使用fastjson作为json转换工具 -->
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<!--顺序保持这样,避免IE下载出错 -->
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="fastJsonConfig" ref="fastJsonConfig" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- springmvc 消息转换器配置结束 -->
</beans>