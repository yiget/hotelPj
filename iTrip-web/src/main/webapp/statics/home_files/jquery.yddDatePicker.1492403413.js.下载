;
var DateUtil=(function(){
  function format(date, fmt) {
      var o = {
          "M+": date.getMonth() + 1, //月份 
          "d+": date.getDate(), //日 
          "h+": date.getHours(), //小时 
          "m+": date.getMinutes(), //分 
          "s+": date.getSeconds(), //秒 
          "q+": Math.floor((date.getMonth() + 3) / 3), //季度 
          "S": date.getMilliseconds() //毫秒 
      };
      if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
      for (var k in o)
      if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
      return fmt;
  }
  /*日期相加 */
  function addDate(strInterval, Number,dtTmp) {     
      var dtTmp = dtTmp|| new Date();    
      switch (strInterval) {     
          case 's' :return new Date(Date.parse(dtTmp) + (1000 * Number));    
          case 'n' :return new Date(Date.parse(dtTmp) + (60000 * Number));    
          case 'h' :return new Date(Date.parse(dtTmp) + (3600000 * Number));    
          case 'd' :return new Date(Date.parse(dtTmp) + (86400000 * Number));    
          case 'w' :return new Date(Date.parse(dtTmp) + ((86400000 * 7) * Number));    
          case 'q' :return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number*3, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());    
          case 'm' :return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());    
          case 'y' :return new Date((dtTmp.getFullYear() + Number), dtTmp.getMonth(), dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());    
      }    
  } 
  /*返回日期相减的天数*/
  function diffDays(date1,date2){
    return (date2.getTime() - date1.getTime())/(24 * 60 * 60 * 1000);
  }
  
  function getDays(dt, start, end) {
    var dt = dt || new Date(),
        _dates = [];
    for(var i = start; i < end; i++) {
      _dates.push(addDate('d', i, dt));
    }
    return _dates;
  }
  return {
    format : format,
    addDate : addDate,
    diffDays : diffDays,
    getDays : getDays
  }
})();

Date.prototype.format = function(fmt){
  return DateUtil.format(this, fmt)
}

;function _datepickerGetStringTrim(objid){
  var obj = document.getElementById(objid);
  if(typeof obj != 'undefind' && obj != null){
    var val = $j("#" + objid).attr("value");
    return val.trim();
  }else{
    return "";
  }
}

;(function($j) {
  $j.fn.YododoDatePicker = function (options){
    var defaults = {
      factor : 1,
      limitFactor : 90,
      endtimeId : 'endtime'
    };
    if(options){
      options = $j.extend(defaults, options);
    }
    if(!options.endtimeLimitFactor) {
      options.endtimeLimitFactor = options.limitFactor + 15;
    }
    
    var today = new Date();
    today = new Date(today.getTime() + 1000*60*60*24*options.factor);
    var todayStr = ""+today.getFullYear()+"-"+(today.getMonth()+1)+"-"+today.getDate();
    var limitDate = new Date(today.getTime() + 1000*60*60*24*options.limitFactor);
    var limitDateStr = ""+limitDate.getFullYear()+"-"+(limitDate.getMonth()+1)+"-"+limitDate.getDate();
    
    var endMin,endMinStr;
    if (options.endtimeFactor) {
      endMin = new Date();
      endMinStr = todayStr;
    } else {
      endMin = today;
      endMinStr = todayStr;
    }

    var endLimitDate = new Date(endMin.getTime() + 1000*60*60*24*options.endtimeLimitFactor);
    var endLimitDateStr = ""+endLimitDate.getFullYear()+"-"+(endLimitDate.getMonth()+1)+"-"+endLimitDate.getDate();

    var startdates = $j(this).datepicker({
      dateFormat: 'yy-mm-dd',
      monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
      dayNamesMin: ['日','一','二','三','四','五','六'],
      minDate: todayStr,
      maxDate: limitDateStr,
      showAnim: "",
      //showOtherMonths: true,
      //selectOtherMonths: true,
      numberOfMonths: 2,
      onSelect: function( selectedDate ) {
        var instance = $j( this ).data( "datepicker" );
        var date = $j.datepicker.parseDate(
          instance.settings.dateFormat ||
          $j.datepicker._defaults.dateFormat,
          selectedDate, instance.settings );
        var minDate = new Date(date.getTime());
        minDate.setDate(date.getDate() + 1);
        enddates.not( this ).datepicker( "option", "minDate", minDate );
        var maxDate = new Date(date.getTime());
        maxDate.setDate(date.getDate() + 15);
        maxDate = endLimitDate.getTime() > maxDate.getTime() ? maxDate : endLimitDate;
        enddates.not( this ).datepicker( "option", "maxDate", maxDate );
        if(options.autoSetEndDate) {
          var endSelectedDate = new Date(date.getTime());
          endSelectedDate.setDate(date.getDate() + options.autoSetEndDate);
          $j("#" + options.endtimeId).val(endSelectedDate.format("yyyy-MM-dd"));
        } else {
          window.setTimeout(function() {
            $j("#" + options.endtimeId).focus();
          }, 100);
        }
        //$j("#" + options.endtimeId).focus();
        //$j("#" + options.endtimeId).selected();
      }
    });
    var enddates = $j("#" + options.endtimeId).datepicker({
      dateFormat: 'yy-mm-dd',
      monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
      dayNamesMin: ['日','一','二','三','四','五','六'],
      minDate: endMinStr,
      maxDate: endLimitDateStr,
      showAnim: "",
      //showOtherMonths: true,
      //selectOtherMonths: true,
      numberOfMonths: 2
    });
    
    var startdate =  $j.datepicker.parseDate('yy-mm-dd', $j(this).val());
    if (startdate) {
      var minDate = new Date(startdate.getTime());
      minDate.setDate(startdate.getDate() + 1);
      enddates.datepicker( "option", "minDate", minDate );
      var maxDate = new Date(startdate.getTime());
      maxDate.setDate(startdate.getDate() + 15);
      maxDate = endLimitDate.getTime() > maxDate.getTime() ? maxDate : endLimitDate;
      enddates.datepicker( "option", "maxDate", maxDate );
    }
  };
})(jQuery);